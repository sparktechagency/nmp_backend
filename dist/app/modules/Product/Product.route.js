"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const Product_controller_1 = __importDefault(require("./Product.controller"));
const validationMiddleware_1 = __importDefault(require("../../middlewares/validationMiddleware"));
const Product_validation_1 = require("./Product.validation");
const AuthMiddleware_1 = __importDefault(require("../../middlewares/AuthMiddleware"));
const user_constant_1 = require("../User/user.constant");
const upload_1 = __importDefault(require("../../helper/upload"));
const router = express_1.default.Router();
router.post('/create-product', (0, AuthMiddleware_1.default)(user_constant_1.UserRole.admin, user_constant_1.UserRole.super_admin), upload_1.default.single("image"), Product_controller_1.default.createProduct);
router.get('/get-single-product/:productId', Product_controller_1.default.getSingleProduct);
router.get('/get-product/:productId', (0, AuthMiddleware_1.default)(user_constant_1.UserRole.admin, user_constant_1.UserRole.super_admin), Product_controller_1.default.getProduct);
router.patch('/update-product/:productId', (0, AuthMiddleware_1.default)(user_constant_1.UserRole.admin, user_constant_1.UserRole.super_admin), (0, validationMiddleware_1.default)(Product_validation_1.updateProductValidationSchema), Product_controller_1.default.updateProduct);
router.patch('/update-product-img/:productId', (0, AuthMiddleware_1.default)(user_constant_1.UserRole.admin, user_constant_1.UserRole.super_admin), upload_1.default.single("image"), Product_controller_1.default.updateProductImg);
router.delete('/delete-product/:productId', (0, AuthMiddleware_1.default)(user_constant_1.UserRole.admin, user_constant_1.UserRole.super_admin), Product_controller_1.default.deleteProduct);
router.get('/get-user-products', Product_controller_1.default.getUserProducts);
router.get('/get-best-seller-products', Product_controller_1.default.getBestSellerProducts);
router.get('/get-feature-products', Product_controller_1.default.getFeatureProducts);
router.get('/get-products', (0, AuthMiddleware_1.default)(user_constant_1.UserRole.admin, user_constant_1.UserRole.super_admin), Product_controller_1.default.getProducts);
const ProductRoutes = router;
exports.default = ProductRoutes;
